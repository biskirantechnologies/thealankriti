{"version":3,"file":"static/js/63.f6a2144e.chunk.js","mappings":"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","sources":["pages/Checkout.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  CheckCircleIcon, \n  CreditCardIcon, \n  QrCodeIcon, \n  ShieldCheckIcon,\n  TruckIcon,\n  LockClosedIcon\n} from '@heroicons/react/24/outline';\nimport { useCart } from '../contexts/CartContext';\nimport { useAuth } from '../contexts/AuthContext';\nimport { ordersAPI, paymentAPI } from '../services/api';\nimport QRCode from 'qrcode.react';\nimport toast from 'react-hot-toast';\n\nconst Checkout = () => {\n  const navigate = useNavigate();\n  const { cartItems, clearCart, getTotalPrice } = useCart();\n  const { user } = useAuth();\n  \n  const [currentStep, setCurrentStep] = useState(1);\n  const [paymentMethod, setPaymentMethod] = useState('upi');\n  const [orderData, setOrderData] = useState(null);\n  const [qrPaymentData, setQrPaymentData] = useState(null);\n  const [paymentStatus, setPaymentStatus] = useState('pending'); // pending, processing, success, failed\n  const [isLoading, setIsLoading] = useState(false);\n  \n  const [shippingInfo, setShippingInfo] = useState({\n    firstName: user?.firstName || '',\n    lastName: user?.lastName || '',\n    email: user?.email || '',\n    phone: user?.phone || '',\n    address: '',\n    city: '',\n    state: '',\n    pincode: '',\n    country: 'India'\n  });\n\n  const [couponCode, setCouponCode] = useState('');\n  const [appliedCoupon, setAppliedCoupon] = useState(null);\n\n  const subtotal = getTotalPrice();\n  const shippingCost = subtotal > 25000 ? 0 : 500;\n  const discount = appliedCoupon ? (subtotal * appliedCoupon.percentage) / 100 : 0;\n  const tax = (subtotal - discount) * 0.03; // 3% GST\n  const total = subtotal + shippingCost - discount + tax;\n\n  const steps = [\n    { id: 1, name: 'Shipping', status: currentStep >= 1 ? 'complete' : 'upcoming' },\n    { id: 2, name: 'Payment', status: currentStep >= 2 ? 'complete' : 'upcoming' },\n    { id: 3, name: 'Confirmation', status: currentStep >= 3 ? 'complete' : 'upcoming' }\n  ];\n\n  useEffect(() => {\n    if (!user) {\n      toast.error('Please login to continue');\n      navigate('/login', { state: { from: { pathname: '/checkout' } } });\n    }\n    if (cartItems.length === 0) {\n      toast.error('Your cart is empty');\n      navigate('/products');\n    }\n  }, [user, cartItems, navigate]);\n\n  const handleInputChange = (e) => {\n    setShippingInfo({\n      ...shippingInfo,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const validateShippingInfo = () => {\n    const required = ['firstName', 'lastName', 'email', 'phone', 'address', 'city', 'state', 'pincode'];\n    for (let field of required) {\n      if (!shippingInfo[field]) {\n        toast.error(`Please fill in ${field}`);\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const applyCoupon = () => {\n    // Mock coupon validation\n    const validCoupons = {\n      'WELCOME10': { percentage: 10, description: '10% off on first order' },\n      'FESTIVAL20': { percentage: 20, description: '20% festival discount' },\n      'SAVE5': { percentage: 5, description: '5% off on all orders' }\n    };\n\n    if (validCoupons[couponCode]) {\n      setAppliedCoupon(validCoupons[couponCode]);\n      toast.success(`Coupon applied! ${validCoupons[couponCode].description}`);\n    } else {\n      toast.error('Invalid coupon code');\n    }\n  };\n\n  const generateQRPayment = () => {\n    // Generate UPI payment QR code\n    const paymentData = {\n      upiId: 'TheAlankriti.jewells@paytm',\n      payeeName: 'The Alankriti',\n      amount: total,\n      transactionId: `UJ${Date.now()}`,\n      note: `Order payment for The Alankriti`\n    };\n\n    // UPI payment string format\n    const upiString = `upi://pay?pa=${paymentData.upiId}&pn=${paymentData.payeeName}&am=${paymentData.amount}&tr=${paymentData.transactionId}&tn=${paymentData.note}`;\n    \n    setQrPaymentData({\n      ...paymentData,\n      qrString: upiString\n    });\n    \n    return paymentData;\n  };\n\n  const handleNextStep = () => {\n    if (currentStep === 1) {\n      if (validateShippingInfo()) {\n        setCurrentStep(2);\n      }\n    } else if (currentStep === 2) {\n      handlePayment();\n    }\n  };\n\n  const handlePayment = async () => {\n    setIsLoading(true);\n    setPaymentStatus('processing');\n\n    try {\n      // Create order\n      const order = {\n        id: `UJ${Date.now()}`,\n        items: cart,\n        shippingInfo,\n        subtotal,\n        shippingCost,\n        discount,\n        tax,\n        total,\n        paymentMethod,\n        status: 'pending',\n        createdAt: new Date().toISOString()\n      };\n\n      if (paymentMethod === 'upi' || paymentMethod === 'qr') {\n        const paymentData = generateQRPayment();\n        setOrderData({ ...order, paymentData });\n        setCurrentStep(3);\n        \n        // Simulate payment verification after 30 seconds\n        setTimeout(() => {\n          setPaymentStatus('success');\n          processOrder(order);\n        }, 30000);\n      } else {\n        // For other payment methods, simulate immediate success\n        setTimeout(() => {\n          setPaymentStatus('success');\n          setOrderData(order);\n          setCurrentStep(3);\n          processOrder(order);\n        }, 2000);\n      }\n    } catch (error) {\n      setPaymentStatus('failed');\n      toast.error('Payment failed. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const processOrder = async (order) => {\n    try {\n      // Prepare order data for API\n      const orderData = {\n        items: cartItems.map(item => ({\n          product: item.id,\n          quantity: item.quantity,\n          price: item.price\n        })),\n        shippingAddress: {\n          firstName: shippingInfo.firstName,\n          lastName: shippingInfo.lastName,\n          email: shippingInfo.email,\n          phone: shippingInfo.phone,\n          street: shippingInfo.address,\n          city: shippingInfo.city,\n          state: shippingInfo.state,\n          zipCode: shippingInfo.pincode,\n          country: shippingInfo.country\n        },\n        paymentMethod: paymentMethod,\n        totalAmount: total,\n        subtotal: subtotal,\n        shippingCost: shippingCost,\n        tax: tax,\n        discount: discount,\n        couponCode: appliedCoupon?.code || null\n      };\n\n      // Send order to backend API\n      const response = await ordersAPI.createOrder(orderData);\n      console.log('Order created:', response.data);\n      \n      // Clear cart\n      clearCart();\n      \n      // Send confirmation email and notification\n      toast.success('Order placed successfully!');\n      \n      // Redirect to success page after 3 seconds\n      setTimeout(() => {\n        navigate(`/order-success/${response.data.order._id}`);\n      }, 3000);\n      \n    } catch (error) {\n      console.error('Error processing order:', error);\n      toast.error('Order processing failed. Please try again.');\n      setPaymentStatus('failed');\n    }\n  };\n\n  const retryPayment = () => {\n    setPaymentStatus('pending');\n    generateQRPayment();\n  };\n\n  if (cartItems.length === 0) return null;\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-12\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Progress steps */}\n        <div className=\"mb-8\">\n          <nav aria-label=\"Progress\">\n            <ol className=\"flex items-center justify-center\">\n              {steps.map((step, stepIdx) => (\n                <li key={step.name} className={`${stepIdx !== steps.length - 1 ? 'pr-8 sm:pr-20' : ''} relative`}>\n                  <div className=\"flex items-center\">\n                    <div className={`flex items-center justify-center w-10 h-10 rounded-full ${\n                      step.status === 'complete' ? 'bg-primary-600' : \n                      currentStep === step.id ? 'bg-primary-600' : 'bg-gray-300'\n                    }`}>\n                      {step.status === 'complete' ? (\n                        <CheckCircleIcon className=\"w-6 h-6 text-white\" />\n                      ) : (\n                        <span className=\"text-white font-medium\">{step.id}</span>\n                      )}\n                    </div>\n                    <span className={`ml-4 text-sm font-medium ${\n                      step.status === 'complete' || currentStep === step.id ? 'text-gray-900' : 'text-gray-500'\n                    }`}>\n                      {step.name}\n                    </span>\n                  </div>\n                  {stepIdx !== steps.length - 1 && (\n                    <div className=\"absolute top-5 left-10 w-8 sm:w-20 h-0.5 bg-gray-300\" />\n                  )}\n                </li>\n              ))}\n            </ol>\n          </nav>\n        </div>\n\n        <div className=\"lg:grid lg:grid-cols-12 lg:gap-x-12\">\n          {/* Main content */}\n          <div className=\"lg:col-span-8\">\n            <AnimatePresence mode=\"wait\">\n              {/* Step 1: Shipping Information */}\n              {currentStep === 1 && (\n                <motion.div\n                  key=\"shipping\"\n                  initial={{ opacity: 0, x: 20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  exit={{ opacity: 0, x: -20 }}\n                  transition={{ duration: 0.3 }}\n                  className=\"bg-white shadow rounded-lg p-6\"\n                >\n                  <h2 className=\"text-lg font-semibold text-gray-900 mb-6\">Shipping Information</h2>\n                  \n                  <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">First name</label>\n                      <input\n                        type=\"text\"\n                        name=\"firstName\"\n                        value={shippingInfo.firstName}\n                        onChange={handleInputChange}\n                        className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">Last name</label>\n                      <input\n                        type=\"text\"\n                        name=\"lastName\"\n                        value={shippingInfo.lastName}\n                        onChange={handleInputChange}\n                        className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500\"\n                      />\n                    </div>\n\n                    <div className=\"sm:col-span-2\">\n                      <label className=\"block text-sm font-medium text-gray-700\">Email address</label>\n                      <input\n                        type=\"email\"\n                        name=\"email\"\n                        value={shippingInfo.email}\n                        onChange={handleInputChange}\n                        className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500\"\n                      />\n                    </div>\n\n                    <div className=\"sm:col-span-2\">\n                      <label className=\"block text-sm font-medium text-gray-700\">Phone number</label>\n                      <input\n                        type=\"tel\"\n                        name=\"phone\"\n                        value={shippingInfo.phone}\n                        onChange={handleInputChange}\n                        className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500\"\n                      />\n                    </div>\n\n                    <div className=\"sm:col-span-2\">\n                      <label className=\"block text-sm font-medium text-gray-700\">Address</label>\n                      <input\n                        type=\"text\"\n                        name=\"address\"\n                        value={shippingInfo.address}\n                        onChange={handleInputChange}\n                        className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">City</label>\n                      <input\n                        type=\"text\"\n                        name=\"city\"\n                        value={shippingInfo.city}\n                        onChange={handleInputChange}\n                        className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">State</label>\n                      <input\n                        type=\"text\"\n                        name=\"state\"\n                        value={shippingInfo.state}\n                        onChange={handleInputChange}\n                        className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">PIN code</label>\n                      <input\n                        type=\"text\"\n                        name=\"pincode\"\n                        value={shippingInfo.pincode}\n                        onChange={handleInputChange}\n                        className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">Country</label>\n                      <select\n                        name=\"country\"\n                        value={shippingInfo.country}\n                        onChange={handleInputChange}\n                        className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500\"\n                      >\n                        <option value=\"India\">India</option>\n                      </select>\n                    </div>\n                  </div>\n                </motion.div>\n              )}\n\n              {/* Step 2: Payment Method */}\n              {currentStep === 2 && (\n                <motion.div\n                  key=\"payment\"\n                  initial={{ opacity: 0, x: 20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  exit={{ opacity: 0, x: -20 }}\n                  transition={{ duration: 0.3 }}\n                  className=\"bg-white shadow rounded-lg p-6\"\n                >\n                  <h2 className=\"text-lg font-semibold text-gray-900 mb-6\">Payment Method</h2>\n                  \n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center\">\n                      <input\n                        id=\"upi\"\n                        name=\"payment-method\"\n                        type=\"radio\"\n                        value=\"upi\"\n                        checked={paymentMethod === 'upi'}\n                        onChange={(e) => setPaymentMethod(e.target.value)}\n                        className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                      />\n                      <label htmlFor=\"upi\" className=\"ml-3 flex items-center\">\n                        <QrCodeIcon className=\"h-5 w-5 text-gray-400 mr-2\" />\n                        <span className=\"text-sm font-medium text-gray-900\">UPI / QR Payment</span>\n                      </label>\n                    </div>\n\n                    <div className=\"flex items-center\">\n                      <input\n                        id=\"card\"\n                        name=\"payment-method\"\n                        type=\"radio\"\n                        value=\"card\"\n                        checked={paymentMethod === 'card'}\n                        onChange={(e) => setPaymentMethod(e.target.value)}\n                        className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300\"\n                      />\n                      <label htmlFor=\"card\" className=\"ml-3 flex items-center\">\n                        <CreditCardIcon className=\"h-5 w-5 text-gray-400 mr-2\" />\n                        <span className=\"text-sm font-medium text-gray-900\">Credit / Debit Card</span>\n                      </label>\n                    </div>\n                  </div>\n\n                  {paymentMethod === 'card' && (\n                    <div className=\"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-md\">\n                      <p className=\"text-sm text-yellow-800\">\n                        Card payment integration coming soon. Please use UPI payment for now.\n                      </p>\n                    </div>\n                  )}\n\n                  <div className=\"mt-6 flex items-center text-sm text-gray-500\">\n                    <LockClosedIcon className=\"h-4 w-4 mr-2\" />\n                    Your payment information is secure and encrypted\n                  </div>\n                </motion.div>\n              )}\n\n              {/* Step 3: Payment & Confirmation */}\n              {currentStep === 3 && (\n                <motion.div\n                  key=\"confirmation\"\n                  initial={{ opacity: 0, x: 20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  exit={{ opacity: 0, x: -20 }}\n                  transition={{ duration: 0.3 }}\n                  className=\"bg-white shadow rounded-lg p-6\"\n                >\n                  {paymentMethod === 'upi' && paymentStatus === 'processing' && qrPaymentData && (\n                    <div className=\"text-center\">\n                      <h2 className=\"text-lg font-semibold text-gray-900 mb-6\">Complete Your Payment</h2>\n                      \n                      <div className=\"max-w-sm mx-auto\">\n                        <div className=\"bg-white p-4 rounded-lg border-2 border-gray-200 mb-4\">\n                          <QRCode \n                            value={qrPaymentData.qrString} \n                            size={200}\n                            className=\"mx-auto\"\n                          />\n                        </div>\n                        \n                        <div className=\"text-sm text-gray-600 space-y-2\">\n                          <p><strong>Amount:</strong> ₹{total.toLocaleString()}</p>\n                          <p><strong>Transaction ID:</strong> {qrPaymentData.transactionId}</p>\n                          <p className=\"text-xs mt-4\">Scan with any UPI app to pay</p>\n                        </div>\n\n                        <div className=\"mt-6 flex items-center justify-center text-blue-600\">\n                          <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600 mr-2\"></div>\n                          Waiting for payment confirmation...\n                        </div>\n\n                        <button\n                          onClick={retryPayment}\n                          className=\"mt-4 text-sm text-primary-600 hover:text-primary-500\"\n                        >\n                          Generate new QR code\n                        </button>\n                      </div>\n                    </div>\n                  )}\n\n                  {paymentStatus === 'success' && (\n                    <div className=\"text-center\">\n                      <CheckCircleIcon className=\"mx-auto h-16 w-16 text-green-500 mb-4\" />\n                      <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Payment Successful!</h2>\n                      <p className=\"text-gray-600 mb-6\">Your order has been placed successfully.</p>\n                      \n                      {orderData && (\n                        <div className=\"bg-gray-50 rounded-lg p-4 text-left\">\n                          <h3 className=\"font-semibold text-gray-900 mb-2\">Order Details:</h3>\n                          <p className=\"text-sm text-gray-600\">Order ID: {orderData.id}</p>\n                          <p className=\"text-sm text-gray-600\">Total: ₹{orderData.total.toLocaleString()}</p>\n                          <p className=\"text-sm text-gray-600\">Items: {orderData.items.length}</p>\n                        </div>\n                      )}\n                      \n                      <p className=\"text-sm text-gray-500 mt-4\">\n                        You will receive an email confirmation shortly.\n                      </p>\n                    </div>\n                  )}\n\n                  {paymentStatus === 'failed' && (\n                    <div className=\"text-center\">\n                      <div className=\"mx-auto h-16 w-16 bg-red-100 rounded-full flex items-center justify-center mb-4\">\n                        <span className=\"text-red-600 text-2xl\">✕</span>\n                      </div>\n                      <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Payment Failed</h2>\n                      <p className=\"text-gray-600 mb-6\">There was an issue processing your payment.</p>\n                      \n                      <button\n                        onClick={() => setCurrentStep(2)}\n                        className=\"bg-primary-600 text-white px-6 py-2 rounded-md hover:bg-primary-700\"\n                      >\n                        Try Again\n                      </button>\n                    </div>\n                  )}\n                </motion.div>\n              )}\n            </AnimatePresence>\n\n            {/* Navigation buttons */}\n            {currentStep < 3 && (\n              <div className=\"mt-6 flex justify-between\">\n                {currentStep > 1 && (\n                  <button\n                    onClick={() => setCurrentStep(currentStep - 1)}\n                    className=\"bg-gray-200 text-gray-700 px-6 py-2 rounded-md hover:bg-gray-300\"\n                  >\n                    Back\n                  </button>\n                )}\n                <button\n                  onClick={handleNextStep}\n                  disabled={isLoading}\n                  className=\"ml-auto bg-primary-600 text-white px-6 py-2 rounded-md hover:bg-primary-700 disabled:opacity-50\"\n                >\n                  {isLoading ? 'Processing...' : currentStep === 1 ? 'Continue to Payment' : 'Place Order'}\n                </button>\n              </div>\n            )}\n          </div>\n\n          {/* Order summary */}\n          <div className=\"lg:col-span-4 mt-8 lg:mt-0\">\n            <div className=\"bg-white shadow rounded-lg p-6 sticky top-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Order Summary</h3>\n              \n              {/* Cart items */}\n              <div className=\"space-y-4 mb-6\">\n                {cart.map((item) => (\n                  <div key={`${item.id}-${item.size}`} className=\"flex items-center space-x-4\">\n                    <img\n                      src={item.image}\n                      alt={item.name}\n                      className=\"h-16 w-16 rounded-md object-cover\"\n                    />\n                    <div className=\"flex-1 min-w-0\">\n                      <p className=\"text-sm font-medium text-gray-900 truncate\">{item.name}</p>\n                      <p className=\"text-sm text-gray-500\">Size: {item.size}</p>\n                      <p className=\"text-sm text-gray-500\">Qty: {item.quantity}</p>\n                    </div>\n                    <p className=\"text-sm font-medium text-gray-900\">\n                      ₹{(item.price * item.quantity).toLocaleString()}\n                    </p>\n                  </div>\n                ))}\n              </div>\n\n              {/* Coupon code */}\n              <div className=\"mb-6\">\n                <div className=\"flex space-x-2\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Coupon code\"\n                    value={couponCode}\n                    onChange={(e) => setCouponCode(e.target.value)}\n                    className=\"flex-1 border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                  <button\n                    onClick={applyCoupon}\n                    className=\"bg-primary-600 text-white px-4 py-2 rounded-md hover:bg-primary-700\"\n                  >\n                    Apply\n                  </button>\n                </div>\n                {appliedCoupon && (\n                  <p className=\"text-sm text-green-600 mt-2\">\n                    ✓ {appliedCoupon.description}\n                  </p>\n                )}\n              </div>\n\n              {/* Price breakdown */}\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span>Subtotal</span>\n                  <span>₹{subtotal.toLocaleString()}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Shipping</span>\n                  <span>{shippingCost === 0 ? 'Free' : `₹${shippingCost}`}</span>\n                </div>\n                {discount > 0 && (\n                  <div className=\"flex justify-between text-green-600\">\n                    <span>Discount</span>\n                    <span>-₹{discount.toLocaleString()}</span>\n                  </div>\n                )}\n                <div className=\"flex justify-between\">\n                  <span>Tax (GST)</span>\n                  <span>₹{tax.toFixed(2)}</span>\n                </div>\n                <div className=\"border-t border-gray-200 pt-2 flex justify-between font-semibold\">\n                  <span>Total</span>\n                  <span>₹{total.toLocaleString()}</span>\n                </div>\n              </div>\n\n              {/* Trust badges */}\n              <div className=\"mt-6 pt-6 border-t border-gray-200\">\n                <div className=\"grid grid-cols-3 gap-4 text-center\">\n                  <div className=\"flex flex-col items-center\">\n                    <ShieldCheckIcon className=\"h-6 w-6 text-green-500 mb-1\" />\n                    <span className=\"text-xs text-gray-600\">Secure</span>\n                  </div>\n                  <div className=\"flex flex-col items-center\">\n                    <TruckIcon className=\"h-6 w-6 text-blue-500 mb-1\" />\n                    <span className=\"text-xs text-gray-600\">Fast Delivery</span>\n                  </div>\n                  <div className=\"flex flex-col items-center\">\n                    <CheckCircleIcon className=\"h-6 w-6 text-purple-500 mb-1\" />\n                    <span className=\"text-xs text-gray-600\">Guaranteed</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Checkout;\n"],"names":["Checkout","navigate","useNavigate","cartItems","clearCart","getTotalPrice","useCart","user","useAuth","currentStep","setCurrentStep","useState","paymentMethod","setPaymentMethod","orderData","setOrderData","qrPaymentData","setQrPaymentData","paymentStatus","setPaymentStatus","isLoading","setIsLoading","shippingInfo","setShippingInfo","firstName","lastName","email","phone","address","city","state","pincode","country","couponCode","setCouponCode","appliedCoupon","setAppliedCoupon","subtotal","shippingCost","discount","percentage","tax","total","steps","id","name","status","useEffect","toast","error","from","pathname","length","handleInputChange","e","_objectSpread","target","value","generateQRPayment","paymentData","upiId","payeeName","amount","transactionId","concat","Date","now","note","upiString","qrString","handlePayment","async","order","items","cart","createdAt","toISOString","setTimeout","processOrder","map","item","product","quantity","price","shippingAddress","street","zipCode","totalAmount","code","response","ordersAPI","createOrder","console","log","data","success","_id","_jsx","className","children","_jsxs","step","stepIdx","CheckCircleIcon","AnimatePresence","mode","motion","div","initial","opacity","x","animate","exit","transition","duration","type","onChange","checked","htmlFor","QrCodeIcon","CreditCardIcon","LockClosedIcon","QRCode","size","toLocaleString","onClick","retryPayment","handleNextStep","validateShippingInfo","required","field","disabled","src","image","alt","placeholder","applyCoupon","validCoupons","description","toFixed","ShieldCheckIcon","TruckIcon"],"sourceRoot":""}