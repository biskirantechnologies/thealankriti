{"version":3,"file":"static/js/723.1d38b2ae.chunk.js","mappings":"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","sources":["components/admin/AdminOrders.js","../node_modules/@heroicons/react/24/outline/esm/EyeIcon.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { adminAPI } from '../../services/api';\nimport { \n  EyeIcon, \n  PencilIcon, \n  TrashIcon,\n  PlusIcon,\n  MagnifyingGlassIcon,\n  FunnelIcon\n} from '@heroicons/react/24/outline';\n\nconst AdminOrders = () => {\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [showOrderModal, setShowOrderModal] = useState(false);\n\n  const orderStatuses = [\n    { value: 'all', label: 'All Orders' },\n    { value: 'pending', label: 'Pending' },\n    { value: 'confirmed', label: 'Confirmed' },\n    { value: 'processing', label: 'Processing' },\n    { value: 'shipped', label: 'Shipped' },\n    { value: 'delivered', label: 'Delivered' },\n    { value: 'cancelled', label: 'Cancelled' }\n  ];\n\n  useEffect(() => {\n    fetchOrders();\n  }, [currentPage, statusFilter, searchTerm]);\n\n  const fetchOrders = async () => {\n    try {\n      setLoading(true);\n      const params = {\n        page: currentPage,\n        limit: 10,\n        search: searchTerm,\n        status: statusFilter !== 'all' ? statusFilter : undefined\n      };\n      \n      const response = await adminAPI.getOrders(params);\n      setOrders(response.data.orders || []);\n      setTotalPages(response.data.totalPages || 1);\n    } catch (error) {\n      console.error('Failed to fetch orders:', error);\n      setOrders([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleStatusUpdate = async (orderId, newStatus) => {\n    try {\n      await adminAPI.updateOrderStatus(orderId, { status: newStatus });\n      fetchOrders(); // Refresh the list\n      \n      // Update selected order if it's open\n      if (selectedOrder?._id === orderId) {\n        setSelectedOrder({ ...selectedOrder, status: newStatus });\n      }\n    } catch (error) {\n      console.error('Failed to update order status:', error);\n    }\n  };\n\n  const viewOrderDetails = async (orderId) => {\n    try {\n      const response = await adminAPI.getOrder(orderId);\n      setSelectedOrder(response.data);\n      setShowOrderModal(true);\n    } catch (error) {\n      console.error('Failed to fetch order details:', error);\n    }\n  };\n\n  const getStatusColor = (status) => {\n    const colors = {\n      pending: 'bg-yellow-100 text-yellow-800',\n      confirmed: 'bg-blue-100 text-blue-800',\n      processing: 'bg-purple-100 text-purple-800',\n      shipped: 'bg-indigo-100 text-indigo-800',\n      delivered: 'bg-green-100 text-green-800',\n      cancelled: 'bg-red-100 text-red-800'\n    };\n    return colors[status] || 'bg-gray-100 text-gray-800';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-gold\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"py-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-900\">Order Management</h1>\n                <p className=\"text-gray-600\">Manage all customer orders and their status</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Filters */}\n        <div className=\"bg-white rounded-lg shadow mb-6\">\n          <div className=\"p-6\">\n            <div className=\"flex flex-col sm:flex-row gap-4\">\n              {/* Search */}\n              <div className=\"flex-1\">\n                <div className=\"relative\">\n                  <MagnifyingGlassIcon className=\"h-5 w-5 absolute left-3 top-3 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search orders by customer name, email, or order ID...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-gold focus:border-gold\"\n                  />\n                </div>\n              </div>\n              \n              {/* Status Filter */}\n              <div className=\"sm:w-48\">\n                <select\n                  value={statusFilter}\n                  onChange={(e) => setStatusFilter(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-gold focus:border-gold\"\n                >\n                  {orderStatuses.map((status) => (\n                    <option key={status.value} value={status.value}>\n                      {status.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Orders Table */}\n        <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Order\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Customer\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Date\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Amount\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Actions\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {orders.length > 0 ? (\n                  orders.map((order) => (\n                    <tr key={order._id} className=\"hover:bg-gray-50\">\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div>\n                          <div className=\"text-sm font-medium text-gray-900\">\n                            #{order.orderNumber || order._id.slice(-6)}\n                          </div>\n                          <div className=\"text-sm text-gray-500\">\n                            {order.items?.length || 0} items\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div>\n                          <div className=\"text-sm font-medium text-gray-900\">\n                            {order.user?.firstName} {order.user?.lastName}\n                          </div>\n                          <div className=\"text-sm text-gray-500\">\n                            {order.user?.email}\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                        {new Date(order.createdAt).toLocaleDateString()}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                        ₹{order.totalAmount?.toLocaleString() || 0}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <select\n                          value={order.status}\n                          onChange={(e) => handleStatusUpdate(order._id, e.target.value)}\n                          className={`text-sm rounded-full px-3 py-1 font-medium border-none ${getStatusColor(order.status)}`}\n                        >\n                          <option value=\"pending\">Pending</option>\n                          <option value=\"confirmed\">Confirmed</option>\n                          <option value=\"processing\">Processing</option>\n                          <option value=\"shipped\">Shipped</option>\n                          <option value=\"delivered\">Delivered</option>\n                          <option value=\"cancelled\">Cancelled</option>\n                        </select>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                        <button\n                          onClick={() => viewOrderDetails(order._id)}\n                          className=\"text-gold hover:text-gold-dark mr-3\"\n                        >\n                          <EyeIcon className=\"h-5 w-5\" />\n                        </button>\n                      </td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"6\" className=\"px-6 py-8 text-center text-gray-500\">\n                      No orders found\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n\n          {/* Pagination */}\n          {totalPages > 1 && (\n            <div className=\"bg-white px-4 py-3 border-t border-gray-200 sm:px-6\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex-1 flex justify-between sm:hidden\">\n                  <button\n                    onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n                    disabled={currentPage === 1}\n                    className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50\"\n                  >\n                    Previous\n                  </button>\n                  <button\n                    onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n                    disabled={currentPage === totalPages}\n                    className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50\"\n                  >\n                    Next\n                  </button>\n                </div>\n                <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n                  <div>\n                    <p className=\"text-sm text-gray-700\">\n                      Page <span className=\"font-medium\">{currentPage}</span> of{' '}\n                      <span className=\"font-medium\">{totalPages}</span>\n                    </p>\n                  </div>\n                  <div>\n                    <nav className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\">\n                      {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (\n                        <button\n                          key={page}\n                          onClick={() => setCurrentPage(page)}\n                          className={`relative inline-flex items-center px-4 py-2 border text-sm font-medium ${\n                            page === currentPage\n                              ? 'z-10 bg-gold border-gold text-white'\n                              : 'bg-white border-gray-300 text-gray-500 hover:bg-gray-50'\n                          }`}\n                        >\n                          {page}\n                        </button>\n                      ))}\n                    </nav>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Order Details Modal */}\n      {showOrderModal && selectedOrder && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-20 mx-auto p-5 border w-11/12 max-w-4xl shadow-lg rounded-md bg-white\">\n            <div className=\"mt-3\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-medium text-gray-900\">\n                  Order #{selectedOrder.orderNumber || selectedOrder._id.slice(-6)}\n                </h3>\n                <button\n                  onClick={() => setShowOrderModal(false)}\n                  className=\"text-gray-400 hover:text-gray-600\"\n                >\n                  <span className=\"sr-only\">Close</span>\n                  ✕\n                </button>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {/* Customer Info */}\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <h4 className=\"font-medium text-gray-900 mb-2\">Customer Information</h4>\n                  <p className=\"text-sm text-gray-600\">\n                    <strong>Name:</strong> {selectedOrder.user?.firstName} {selectedOrder.user?.lastName}\n                  </p>\n                  <p className=\"text-sm text-gray-600\">\n                    <strong>Email:</strong> {selectedOrder.user?.email}\n                  </p>\n                  <p className=\"text-sm text-gray-600\">\n                    <strong>Phone:</strong> {selectedOrder.user?.phone || 'N/A'}\n                  </p>\n                </div>\n\n                {/* Order Info */}\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <h4 className=\"font-medium text-gray-900 mb-2\">Order Information</h4>\n                  <p className=\"text-sm text-gray-600\">\n                    <strong>Date:</strong> {new Date(selectedOrder.createdAt).toLocaleDateString()}\n                  </p>\n                  <p className=\"text-sm text-gray-600\">\n                    <strong>Status:</strong> \n                    <span className={`ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(selectedOrder.status)}`}>\n                      {selectedOrder.status}\n                    </span>\n                  </p>\n                  <p className=\"text-sm text-gray-600\">\n                    <strong>Total:</strong> ₹{selectedOrder.totalAmount?.toLocaleString() || 0}\n                  </p>\n                </div>\n              </div>\n\n              {/* Order Items */}\n              <div className=\"mt-6\">\n                <h4 className=\"font-medium text-gray-900 mb-4\">Order Items</h4>\n                <div className=\"border rounded-lg overflow-hidden\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Product</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Quantity</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Price</th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Total</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"divide-y divide-gray-200\">\n                      {selectedOrder.items?.map((item, index) => (\n                        <tr key={index}>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <div className=\"flex items-center\">\n                              <img\n                                className=\"h-10 w-10 rounded-md object-cover\"\n                                src={item.product?.images?.[0] || '/api/placeholder/40/40'}\n                                alt={item.product?.name || 'Product'}\n                              />\n                              <div className=\"ml-4\">\n                                <div className=\"text-sm font-medium text-gray-900\">\n                                  {item.product?.name || 'Unknown Product'}\n                                </div>\n                              </div>\n                            </div>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                            {item.quantity}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                            ₹{item.price?.toLocaleString() || 0}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                            ₹{((item.price || 0) * (item.quantity || 0)).toLocaleString()}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n\n              {/* Shipping Address */}\n              {selectedOrder.shippingAddress && (\n                <div className=\"mt-6\">\n                  <h4 className=\"font-medium text-gray-900 mb-2\">Shipping Address</h4>\n                  <div className=\"bg-gray-50 p-4 rounded-lg\">\n                    <p className=\"text-sm text-gray-600\">\n                      {selectedOrder.shippingAddress.street}<br />\n                      {selectedOrder.shippingAddress.city}, {selectedOrder.shippingAddress.state} {selectedOrder.shippingAddress.zipCode}<br />\n                      {selectedOrder.shippingAddress.country}\n                    </p>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdminOrders;\n","import * as React from \"react\";\nfunction EyeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.036 12.322a1.012 1.012 0 0 1 0-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(EyeIcon);\nexport default ForwardRef;"],"names":["AdminOrders","_selectedOrder$user","_selectedOrder$user2","_selectedOrder$user3","_selectedOrder$user4","_selectedOrder$totalA","_selectedOrder$items","orders","setOrders","useState","loading","setLoading","searchTerm","setSearchTerm","statusFilter","setStatusFilter","currentPage","setCurrentPage","totalPages","setTotalPages","selectedOrder","setSelectedOrder","showOrderModal","setShowOrderModal","useEffect","fetchOrders","async","params","page","limit","search","status","undefined","response","adminAPI","getOrders","data","error","console","getStatusColor","pending","confirmed","processing","shipped","delivered","cancelled","_jsx","className","children","_jsxs","MagnifyingGlassIcon","type","placeholder","value","onChange","e","target","label","map","length","order","_order$items","_order$user","_order$user2","_order$user3","_order$totalAmount","orderNumber","_id","slice","items","user","firstName","lastName","email","Date","createdAt","toLocaleDateString","totalAmount","toLocaleString","orderId","newStatus","updateOrderStatus","_objectSpread","handleStatusUpdate","concat","onClick","getOrder","viewOrderDetails","EyeIcon","colSpan","prev","Math","max","disabled","min","Array","from","_","i","phone","item","index","_item$product","_item$product$images","_item$product2","_item$product3","_item$price","src","product","images","alt","name","quantity","price","shippingAddress","street","city","state","zipCode","country","_ref","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d"],"sourceRoot":""}