{"version":3,"file":"static/js/833.8a2d98e1.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/24/outline/esm/PencilIcon.js","../node_modules/@heroicons/react/24/outline/esm/PhotoIcon.js","components/admin/AdminProducts.js"],"sourcesContent":["import * as React from \"react\";\nfunction PencilIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L6.832 19.82a4.5 4.5 0 0 1-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 0 1 1.13-1.897L16.863 4.487Zm0 0L19.5 7.125\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PencilIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PhotoIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m2.25 15.75 5.159-5.159a2.25 2.25 0 0 1 3.182 0l5.159 5.159m-1.5-1.5 1.409-1.409a2.25 2.25 0 0 1 3.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 0 0 1.5-1.5V6a1.5 1.5 0 0 0-1.5-1.5H3.75A1.5 1.5 0 0 0 2.25 6v12a1.5 1.5 0 0 0 1.5 1.5Zm10.5-11.25h.008v.008h-.008V8.25Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PhotoIcon);\nexport default ForwardRef;","import React, { useState, useEffect } from 'react';\nimport { adminAPI } from '../../services/api';\nimport { \n  PencilIcon, \n  TrashIcon,\n  PlusIcon,\n  MagnifyingGlassIcon,\n  PhotoIcon\n} from '@heroicons/react/24/outline';\n\nconst AdminProducts = () => {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [categoryFilter, setCategoryFilter] = useState('all');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [showProductModal, setShowProductModal] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const categories = [\n    { value: 'all', label: 'All Categories' },\n    { value: 'rings', label: 'Rings' },\n    { value: 'necklaces', label: 'Necklaces' },\n    { value: 'earrings', label: 'Earrings' },\n    { value: 'bracelets', label: 'Bracelets' },\n    { value: 'pendants', label: 'Pendants' }\n  ];\n\n  const [productForm, setProductForm] = useState({\n    name: '',\n    description: '',\n    price: '',\n    category: 'rings',\n    stock: '',\n    images: [],\n    specifications: {\n      material: '',\n      weight: '',\n      dimensions: ''\n    }\n  });\n\n  useEffect(() => {\n    fetchProducts();\n  }, [currentPage, categoryFilter, searchTerm]);\n\n  const fetchProducts = async () => {\n    try {\n      setLoading(true);\n      const params = {\n        page: currentPage,\n        limit: 10,\n        search: searchTerm,\n        category: categoryFilter !== 'all' ? categoryFilter : undefined\n      };\n      \n      const response = await adminAPI.getProducts(params);\n      setProducts(response.data.products || []);\n      setTotalPages(response.data.totalPages || 1);\n    } catch (error) {\n      console.error('Failed to fetch products:', error);\n      setProducts([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleProductSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (isEditing) {\n        // Update product logic would go here\n        console.log('Update product:', productForm);\n      } else {\n        // Create product logic would go here\n        console.log('Create product:', productForm);\n      }\n      setShowProductModal(false);\n      setProductForm({\n        name: '',\n        description: '',\n        price: '',\n        category: 'rings',\n        stock: '',\n        images: [],\n        specifications: {\n          material: '',\n          weight: '',\n          dimensions: ''\n        }\n      });\n      fetchProducts();\n    } catch (error) {\n      console.error('Failed to save product:', error);\n    }\n  };\n\n  const handleEditProduct = (product) => {\n    setSelectedProduct(product);\n    setProductForm({\n      name: product.name || '',\n      description: product.description || '',\n      price: product.price || '',\n      category: product.category || 'rings',\n      stock: product.stock || '',\n      images: product.images || [],\n      specifications: {\n        material: product.specifications?.material || '',\n        weight: product.specifications?.weight || '',\n        dimensions: product.specifications?.dimensions || ''\n      }\n    });\n    setIsEditing(true);\n    setShowProductModal(true);\n  };\n\n  const handleAddProduct = () => {\n    setSelectedProduct(null);\n    setProductForm({\n      name: '',\n      description: '',\n      price: '',\n      category: 'rings',\n      stock: '',\n      images: [],\n      specifications: {\n        material: '',\n        weight: '',\n        dimensions: ''\n      }\n    });\n    setIsEditing(false);\n    setShowProductModal(true);\n  };\n\n  const handleStockUpdate = async (productId, newStock) => {\n    try {\n      await adminAPI.updateStock(productId, { stock: newStock });\n      fetchProducts();\n    } catch (error) {\n      console.error('Failed to update stock:', error);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-gold\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"py-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-900\">Product Management</h1>\n                <p className=\"text-gray-600\">Manage your jewelry inventory and product details</p>\n              </div>\n              <button\n                onClick={handleAddProduct}\n                className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-gold hover:bg-gold-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gold\"\n              >\n                <PlusIcon className=\"h-5 w-5 mr-2\" />\n                Add Product\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Filters */}\n        <div className=\"bg-white rounded-lg shadow mb-6\">\n          <div className=\"p-6\">\n            <div className=\"flex flex-col sm:flex-row gap-4\">\n              {/* Search */}\n              <div className=\"flex-1\">\n                <div className=\"relative\">\n                  <MagnifyingGlassIcon className=\"h-5 w-5 absolute left-3 top-3 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search products by name, description, or SKU...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-gold focus:border-gold\"\n                  />\n                </div>\n              </div>\n              \n              {/* Category Filter */}\n              <div className=\"sm:w-48\">\n                <select\n                  value={categoryFilter}\n                  onChange={(e) => setCategoryFilter(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-gold focus:border-gold\"\n                >\n                  {categories.map((category) => (\n                    <option key={category.value} value={category.value}>\n                      {category.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Products Grid */}\n        <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 p-6\">\n            {products.length > 0 ? (\n              products.map((product) => (\n                <div key={product._id} className=\"border border-gray-200 rounded-lg overflow-hidden hover:shadow-lg transition-shadow\">\n                  <div className=\"aspect-w-1 aspect-h-1 bg-gray-200\">\n                    <img\n                      src={product.images?.[0] || '/api/placeholder/300/300'}\n                      alt={product.name}\n                      className=\"w-full h-48 object-cover\"\n                    />\n                  </div>\n                  <div className=\"p-4\">\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">{product.name}</h3>\n                    <p className=\"text-sm text-gray-600 mb-2 line-clamp-2\">{product.description}</p>\n                    <div className=\"flex items-center justify-between mb-3\">\n                      <span className=\"text-lg font-bold text-gold\">₹{product.price?.toLocaleString()}</span>\n                      <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n                        product.stock > 10 ? 'bg-green-100 text-green-800' :\n                        product.stock > 0 ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-red-100 text-red-800'\n                      }`}>\n                        Stock: {product.stock}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center space-x-2\">\n                      <input\n                        type=\"number\"\n                        min=\"0\"\n                        value={product.stock}\n                        onChange={(e) => handleStockUpdate(product._id, parseInt(e.target.value))}\n                        className=\"flex-1 px-2 py-1 text-sm border border-gray-300 rounded focus:ring-gold focus:border-gold\"\n                      />\n                      <button\n                        onClick={() => handleEditProduct(product)}\n                        className=\"p-2 text-blue-600 hover:text-blue-800\"\n                      >\n                        <PencilIcon className=\"h-4 w-4\" />\n                      </button>\n                      <button className=\"p-2 text-red-600 hover:text-red-800\">\n                        <TrashIcon className=\"h-4 w-4\" />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))\n            ) : (\n              <div className=\"col-span-full text-center py-12\">\n                <div className=\"text-gray-500\">\n                  <PhotoIcon className=\"h-12 w-12 mx-auto mb-4\" />\n                  <p>No products found</p>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Pagination */}\n          {totalPages > 1 && (\n            <div className=\"bg-white px-4 py-3 border-t border-gray-200 sm:px-6\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex-1 flex justify-between sm:hidden\">\n                  <button\n                    onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n                    disabled={currentPage === 1}\n                    className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50\"\n                  >\n                    Previous\n                  </button>\n                  <button\n                    onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n                    disabled={currentPage === totalPages}\n                    className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50\"\n                  >\n                    Next\n                  </button>\n                </div>\n                <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n                  <div>\n                    <p className=\"text-sm text-gray-700\">\n                      Page <span className=\"font-medium\">{currentPage}</span> of{' '}\n                      <span className=\"font-medium\">{totalPages}</span>\n                    </p>\n                  </div>\n                  <div>\n                    <nav className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\">\n                      {Array.from({ length: Math.min(totalPages, 5) }, (_, i) => i + 1).map((page) => (\n                        <button\n                          key={page}\n                          onClick={() => setCurrentPage(page)}\n                          className={`relative inline-flex items-center px-4 py-2 border text-sm font-medium ${\n                            page === currentPage\n                              ? 'z-10 bg-gold border-gold text-white'\n                              : 'bg-white border-gray-300 text-gray-500 hover:bg-gray-50'\n                          }`}\n                        >\n                          {page}\n                        </button>\n                      ))}\n                    </nav>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Product Modal */}\n      {showProductModal && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-20 mx-auto p-5 border w-11/12 max-w-2xl shadow-lg rounded-md bg-white\">\n            <form onSubmit={handleProductSubmit}>\n              <div className=\"mt-3\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h3 className=\"text-lg font-medium text-gray-900\">\n                    {isEditing ? 'Edit Product' : 'Add New Product'}\n                  </h3>\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowProductModal(false)}\n                    className=\"text-gray-400 hover:text-gray-600\"\n                  >\n                    ✕\n                  </button>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Product Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      required\n                      value={productForm.name}\n                      onChange={(e) => setProductForm({...productForm, name: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-gold focus:border-gold\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Category\n                    </label>\n                    <select\n                      value={productForm.category}\n                      onChange={(e) => setProductForm({...productForm, category: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-gold focus:border-gold\"\n                    >\n                      <option value=\"rings\">Rings</option>\n                      <option value=\"necklaces\">Necklaces</option>\n                      <option value=\"earrings\">Earrings</option>\n                      <option value=\"bracelets\">Bracelets</option>\n                      <option value=\"pendants\">Pendants</option>\n                    </select>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Price (₹)\n                    </label>\n                    <input\n                      type=\"number\"\n                      required\n                      min=\"0\"\n                      step=\"0.01\"\n                      value={productForm.price}\n                      onChange={(e) => setProductForm({...productForm, price: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-gold focus:border-gold\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Stock Quantity\n                    </label>\n                    <input\n                      type=\"number\"\n                      required\n                      min=\"0\"\n                      value={productForm.stock}\n                      onChange={(e) => setProductForm({...productForm, stock: e.target.value})}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-gold focus:border-gold\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"mt-4\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Description\n                  </label>\n                  <textarea\n                    rows=\"3\"\n                    value={productForm.description}\n                    onChange={(e) => setProductForm({...productForm, description: e.target.value})}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-gold focus:border-gold\"\n                  />\n                </div>\n\n                <div className=\"mt-4 grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Material\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={productForm.specifications.material}\n                      onChange={(e) => setProductForm({\n                        ...productForm, \n                        specifications: {...productForm.specifications, material: e.target.value}\n                      })}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-gold focus:border-gold\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Weight\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={productForm.specifications.weight}\n                      onChange={(e) => setProductForm({\n                        ...productForm, \n                        specifications: {...productForm.specifications, weight: e.target.value}\n                      })}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-gold focus:border-gold\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Dimensions\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={productForm.specifications.dimensions}\n                      onChange={(e) => setProductForm({\n                        ...productForm, \n                        specifications: {...productForm.specifications, dimensions: e.target.value}\n                      })}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-gold focus:border-gold\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"mt-6 flex justify-end space-x-3\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowProductModal(false)}\n                    className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-4 py-2 border border-transparent rounded-md text-sm font-medium text-white bg-gold hover:bg-gold-dark\"\n                  >\n                    {isEditing ? 'Update Product' : 'Add Product'}\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdminProducts;\n"],"names":["PencilIcon","_ref","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","PhotoIcon","AdminProducts","products","setProducts","useState","loading","setLoading","searchTerm","setSearchTerm","categoryFilter","setCategoryFilter","currentPage","setCurrentPage","totalPages","setTotalPages","showProductModal","setShowProductModal","selectedProduct","setSelectedProduct","isEditing","setIsEditing","productForm","setProductForm","name","description","price","category","stock","images","specifications","material","weight","dimensions","useEffect","fetchProducts","async","params","page","limit","search","undefined","response","adminAPI","getProducts","data","error","console","_jsx","className","children","_jsxs","onClick","handleAddProduct","PlusIcon","MagnifyingGlassIcon","type","placeholder","value","onChange","e","target","label","map","length","product","_product$images","_product$price","src","alt","toLocaleString","concat","min","productId","newStock","updateStock","handleStockUpdate","_id","parseInt","_product$specificatio","_product$specificatio2","_product$specificatio3","handleEditProduct","TrashIcon","prev","Math","max","disabled","Array","from","_","i","onSubmit","preventDefault","log","required","_objectSpread","step","rows"],"sourceRoot":""}